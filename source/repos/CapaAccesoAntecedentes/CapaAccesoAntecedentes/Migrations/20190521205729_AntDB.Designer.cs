// <auto-generated />
using System;
using CapaAccesoAntecedentes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CapaAccesoAntecedentes.Migrations
{
    [DbContext(typeof(AntContext))]
    [Migration("20190521205729_AntDB")]
    partial class AntDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CapaAccesoAntecedentes.Models.EltoAntEvaluar", b =>
                {
                    b.Property<int>("IdEltoAntEvaluar")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstadoEltoEvaluar");

                    b.Property<int>("IdInternacion");

                    b.Property<string>("NombreEltoEvaluar");

                    b.Property<string>("Observacion");

                    b.Property<int?>("TipoAntecedenteIdTipoAnt");

                    b.HasKey("IdEltoAntEvaluar");

                    b.HasIndex("TipoAntecedenteIdTipoAnt");

                    b.ToTable("EltoAntEvaluars");
                });

            modelBuilder.Entity("CapaAccesoAntecedentes.Models.TipoAntecedente", b =>
                {
                    b.Property<int>("IdTipoAnt")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomTipoAnt");

                    b.HasKey("IdTipoAnt");

                    b.ToTable("TipoAntecedentes");
                });

            modelBuilder.Entity("CapaAccesoAntecedentes.Models.internac_paciente", b =>
                {
                    b.Property<int>("Id_internacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha_ingreso");

                    b.Property<int>("Id_expediente");

                    b.Property<int>("Id_personal");

                    b.Property<string>("Imp_diagnostica");

                    b.Property<string>("Tratamiento");

                    b.Property<int?>("internac_pacienteId_internacion");

                    b.HasKey("Id_internacion");

                    b.HasIndex("internac_pacienteId_internacion");

                    b.ToTable("internac_Pacientes");
                });

            modelBuilder.Entity("CapaAccesoAntecedentes.Models.EltoAntEvaluar", b =>
                {
                    b.HasOne("CapaAccesoAntecedentes.Models.TipoAntecedente", "TipoAntecedente")
                        .WithMany("EltoAntEvaluars")
                        .HasForeignKey("TipoAntecedenteIdTipoAnt");
                });

            modelBuilder.Entity("CapaAccesoAntecedentes.Models.internac_paciente", b =>
                {
                    b.HasOne("CapaAccesoAntecedentes.Models.internac_paciente")
                        .WithMany("internac_pacientes")
                        .HasForeignKey("internac_pacienteId_internacion");
                });
#pragma warning restore 612, 618
        }
    }
}
